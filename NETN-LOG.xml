<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<objectModel xsi:schemaLocation="http://standards.ieee.org/IEEE1516-2010 http://standards.ieee.org/downloads/1516/1516.2-2010/IEEE1516-DIF-2010.xsd" xmlns="http://standards.ieee.org/IEEE1516-2010" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelIdentification notes="netn-log_1">
        <name>NETN LOG</name>
        <type>FOM</type>
        <version>2.0 (RC1)</version>
        <modificationDate>2019-06-18</modificationDate>
        <securityClassification>Not Classified</securityClassification>
        <releaseRestriction></releaseRestriction>
        <purpose>The NETN LOG module provides a common standard interface for negotiation, delivery and acceptance of logistics services where service providers and consumers are represented in different systems in a federated distributed simulation.</purpose>
        <applicationDomain>Training</applicationDomain>
        <description>The NATO Education and Training Network (NETN) Logistics FOM Module.

This module is a specification of how to represent logistics services provided to participants in a federated distributed simulation. The specification is based on IEEE 1516 High Level Architecture (HLA) Object Model Template (OMT) and primarily intended to support interoperability in a federated simulation (federation) based on HLA. An HLA OMT based Federation Object Model (FOM) is used to specify types of data and how it is encoded on the network. The NETN FOM FOM module is available as a XML file for use in HLA based federations.</description>
        <useLimitation> The NETN Logistics module covers the following services:  * Supply Service offered by a facility, unit or entity with a capability to provide supplies to the consumer. The supplies are transferred from the provider to the consumer of this service. * Storage Service offered by a facility, unit or entity with a capability to store supplies. The supplies are transferred from the consumer to the provider of this service. * Transport Service offered by a facility, unit or entity with a capability to transport non-consumable materiel. Units can embark, be transported and then disembark. * Repair service offered by a facility, unit or entity with the capability to repair non-consumables materiel, e.g platforms.  Examples of use:  * Refuelling of aircraft at an airbase or in the air * Transport of supplies between facilities * Repair of damaged platforms in facility or by unit * Transport of units, platforms, and humans by train, ship, or aircraft * Embarkment and disembarkment of units on platforms         </useLimitation>
        <useHistory>v2.0.0 - Initial merged version of NETN-LOG FOM Module. This version replaces NETN-SCP, NETN-Supply, NETN-Storage, NETN-Repair and NETN-Transport.</useHistory>
        <poc>
            <pocType>Primary author</pocType>
            <pocName>Lennart Olsson</pocName>
            <pocOrg>Pitch Technologies</pocOrg>
            <pocTelephone>+46134705500</pocTelephone>
            <pocEmail>lennart.olsson@pitchtechnologies.com</pocEmail>
        </poc>
        <poc>
            <pocType>Contributor</pocType>
            <pocName>Björn Löfstrand</pocName>
            <pocOrg>Pitch Technologies</pocOrg>
            <pocTelephone>+46702475152</pocTelephone>
            <pocEmail>bjorn.lofstrand@pitchtechnologies.com</pocEmail>
        </poc>
        <reference>
            <type>Dependency</type>
            <identification>NETN-BASE</identification>
        </reference>
        <other>
Copyright © 2019 by NATO/OTAN. All rights reserved.
This work is licensed under a Creative Commons Attribution-NoDerivatives 4.0 International License.

Above license gives you the right to use and redistribute the NETN FOM Module (XML file and Documentation) in its entirety without modification. You are also allowed to develop your own new FOM Modules (in separate XML files and separate documentation) that build-on/extends the NETN module by reference. You are NOT allowed to modify the NETN FOM Module or its documentation without prior permission by the NATO Modelling and Simulation Group.</other>
        <glyph type="png" height="48" width="48" alt="">iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIRSURBVGhD7Zi7ThVRGIUnoZAKY6Tw0tHY8woWgMoTWFmbWKAkXAoaXgCegnegkUaI9lRWXhqFgIkFGBNZ62TY+c/K3nPZ2X9isb/kS05m/XvtczhM5sw0lUqlUqm0PIPf4D9nuccyLM5XGNvQwy+wOLGNPC1ObBNPi+O9gXe/+wbe/e4baH+fZ/AIvoIzsBctKI32j/E9nIed6CKldD7WQ9j5TegCpXSe4xuYRIcV71x5Ao+hXfMLPoZR7CBVvPMYD+EltOsOYBQ7RBXvPMVrqGujv6V0SPHOU/DE/Qjt2s9wFk5hB6jinXexCP9Cu34XTmFDqnjnfexBu/4KLsCADaninfcxB/V+ZR8GbEAV73wIL6HtOIUBG9DSlOi/A23HNQzYgJamVH+yJxmAu3ATnsDzVl4lNyCzIZTqT/akgqeQhZrfyowzfei6W8b2ax6IBSvwD9RM5f9i35MGXUNy+jULaHAPfpdjXXKWa1LofG6/Hg9ooPLCsQYfQP7Ietsei83mmNsfiIXWd1BZh7HZHHP7A30PtvhXUXgsNptjTv/UAzKeJDwQG6T/2wfge12CSfRuaMhX/AEOxbu/2YZ2MU8obvKola/1JNuCQ/Hub+7Dn9AWdPkDcs1QvPsnvIB6IxGTM8/hWLz7J6zCCxgrprzU843k4t0/gU/FduAn+LuVr3ls9Ncawbu/UqlUXGiaG6HtCk/oIWIVAAAAAElFTkSuQmCC</glyph>
    </modelIdentification>
    <objects>
        <objectClass>
            <name>HLAobjectRoot</name>
        </objectClass>
    </objects>
    <interactions>
        <interactionClass>
            <name>HLAinteractionRoot</name>
            <interactionClass>
                <name>LOG_Service</name>
                <sharing>Neither</sharing>
                <transportation>HLAreliable</transportation>
                <order>Receive</order>
                <semantics>Base class for all NETN Logistics Pattern Service Transactions.</semantics>
                <parameter>
                    <name>ServiceID</name>
                    <dataType>TransactionId</dataType>
                    <semantics>Required: Unique identifier for the requested service related to the transaction.</semantics>
                </parameter>
                <interactionClass>
                    <name>RequestService</name>
                    <sharing>Neither</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>A consumer federate initiates service negotiation using `RequestService`. A unique ServiceID and a reference to a `ConsumerEntity` are required parameters. A reference to a specific `ProviderEntity` and a system wall-clock time for when offers are expected `RequestTimeOut` are optional. 
Requests for specific types of services are defined as subclasses to `RequestService` and include parameters for detailing the requirements of the request. This may include information when, where and how the service should be delivered.</semantics>
                    <parameter>
                        <name>ConsumerEntity</name>
                        <dataType>UuidArrayOfHLAbyte16</dataType>
                        <semantics>Required: Unique identifier for a simulated entity that is the intended receiver of service</semantics>
                    </parameter>
                    <parameter>
                        <name>ProviderEntity</name>
                        <dataType>UuidArrayOfHLAbyte16</dataType>
                        <semantics>Optional: Unique identifier of a simulated entity intended to perform the service. If not provided, the entity performing the service is considered unknown.</semantics>
                    </parameter>
                    <parameter>
                        <name>RequestTimeOut</name>
                        <dataType>TimeSecInt64</dataType>
                        <semantics>Optional: Wallclock time. The timeout time in seconds after 1 January 1970.</semantics>
                    </parameter>
                    <parameter>
                        <name>StartAppointment</name>
                        <dataType>AppointmentStruct</dataType>
                        <semantics>Optional: The time and location of the start of the service delivery.</semantics>
                    </parameter>
                    <interactionClass>
                        <name>RequestRepair</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Sent by the consumer when a repair for needed. Specifies entity and type of repair</semantics>
                        <parameter>
                            <name>RepairData</name>
                            <dataType>ArrayOfRepairStruct</dataType>
                            <semantics>Required: List of all requested repairs.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>RequestSupply</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>The consumer sends a `RequestSupply` interaction to request supplies. The amount and type of supplies are specified in the required `SuppliesData` parameter. The required `TransferDirection` parameter indicates whether supplies are transferred from Consumer to provider or from Provider to consumer.</semantics>
                        <parameter>
                            <name>SuppliesData</name>
                            <dataType>NETN_ArrayOfSupplyStruct</dataType>
                            <semantics>Required: List of type and quantity of supplies requested.</semantics>
                        </parameter>
                        <parameter>
                            <name>TransferDirection</name>
                            <dataType>TransferDirectionEnum32</dataType>
                            <semantics>Required: Indicates if the transfer of supplies are from Consumer to Provider or from Provider to Consumer.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>RequestTransport</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>A request for a Transport support. 
The request to transport, embark or disembark a platform is initiated by a RequestTransport interaction;</semantics>
                        <parameter>
                            <name>TransportData</name>
                            <dataType>ArrayOfUuid</dataType>
                            <semantics>Required: Entities to be transported.</semantics>
                        </parameter>
                        <parameter>
                            <name>EndAppointment</name>
                            <dataType>AppointmentStruct</dataType>
                            <semantics>Optional: Location and time for disembarkment.</semantics>
                        </parameter>
                    </interactionClass>
                </interactionClass>
                <interactionClass>
                    <name>OfferService</name>
                    <sharing>Neither</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>The OfferService is a response to a RequestService and contains information with respect to the providing entities ability to deliver the requested service. This ability is expressed as either an offer to provide the service or no offer. Subclasses of this interaction for specific types of offers should contain more detailed description of the offer. This may include information about when, where, how the service can be delivered.</semantics>
                    <parameter>
                        <name>OfferID</name>
                        <dataType>TransactionId</dataType>
                        <semantics>Required: Unique offer identifier.</semantics>
                    </parameter>
                    <parameter>
                        <name>ProviderEntity</name>
                        <dataType>UuidArrayOfHLAbyte16</dataType>
                        <semantics>Required: Unique identifier of a simulated entity intended to perform the service. If not provided, the entity performing the service is considered unknown.</semantics>
                    </parameter>
                    <parameter>
                        <name>OfferType</name>
                        <dataType>OfferTypeEnum32</dataType>
                        <semantics>Optional: Specifies if the offer is Negative (no Offer), Positive (Complete as requested) or Modified (not the same as the requested).</semantics>
                    </parameter>
                    <parameter>
                        <name>OfferTimeOut</name>
                        <dataType>TimeSecInt64</dataType>
                        <semantics>Optional: The system wallclock time (in seconds after 1 January 1970) when the offer stops being valid. If not provided, the offer valid until otherwise specified.</semantics>
                    </parameter>
                    <parameter>
                        <name>StartAppointment</name>
                        <dataType>AppointmentStruct</dataType>
                        <semantics>Optional: Time and location of the start of service delivery.</semantics>
                    </parameter>
                    <interactionClass>
                        <name>OfferRepair</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Is sent by a federate simulating the service providing entity in response to a RequestRepair interaction.</semantics>
                        <parameter>
                            <name>RepairData</name>
                            <dataType>ArrayOfRepairStruct</dataType>
                            <semantics>Required: List of the type of repairs offered. May be different from the list of requested repairs. List of all offered repairs if isOffering = true otherwise Undefined</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>OfferSupply</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>Used by a supply service provider to indicate which of the requested materiel (amount and type) can be offered. In this request the consumer decides whether the loading is done by the provider or by the consumer.</semantics>
                        <parameter>
                            <name>SuppliesData</name>
                            <dataType>NETN_ArrayOfSupplyStruct</dataType>
                            <semantics>Required: List of type and quantity of supplies offered. May be different from the list of requested supplies. All offered supplies if isOffering = true otherwise Undefined</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>OfferTransport</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>An Offer for a Transport support. The OfferTransport interaction shall be sent by the service providing federate in response to a RequestTransport interaction.</semantics>
                        <parameter>
                            <name>TransportData</name>
                            <dataType>ArrayOfUuid</dataType>
                            <semantics>Required: Entities to be transported.</semantics>
                        </parameter>
                        <parameter>
                            <name>EndAppointment</name>
                            <dataType>AppointmentStruct</dataType>
                            <semantics>Optional: Location and time for disembarkment.</semantics>
                        </parameter>
                        <parameter>
                            <name>Transporters</name>
                            <dataType>ArrayOfUuid</dataType>
                            <semantics>Optional: Platform list with transporters</semantics>
                        </parameter>
                    </interactionClass>
                </interactionClass>
                <interactionClass>
                    <name>AcceptOffer</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>The AcceptOffer is used to accept an offer made by a service providing entity as indicated in a OfferService interaction. By issuing a AcceptOffer interaction the service consuming entity enters a contract for service delivery with the service producing entity.</semantics>
                    <parameter>
                        <name>OfferID</name>
                        <dataType>TransactionId</dataType>
                        <semantics>Required: Unique offer identifier.</semantics>
                    </parameter>
                </interactionClass>
                <interactionClass>
                    <name>ServiceStarted</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Issued by a service providing entity to inform about the start of service delivery. The time of service delivery start may be significantly later then receiving a indication from the consumer that the service delivery can start. 
 
The SCP_ServiceStarted interaction does not define any additional parameters.</semantics>
                </interactionClass>
                <interactionClass>
                    <name>ServiceComplete</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Used by a service providing entity to inform the service consuming entity that the service has been delivered.</semantics>
                    <interactionClass>
                        <name>SupplyComplete</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>This interaction is sent by the provider when the supply is delivered to the consumer</semantics>
                        <parameter>
                            <name>SuppliesData</name>
                            <dataType>NETN_ArrayOfSupplyStruct</dataType>
                            <semantics>The amount of supplies, by type, that were transferred from provider to consumer.</semantics>
                        </parameter>
                    </interactionClass>
                    <interactionClass>
                        <name>RepairComplete</name>
                        <sharing>PublishSubscribe</sharing>
                        <transportation>HLAreliable</transportation>
                        <order>Receive</order>
                        <semantics>This interaction is sent by the provider when the repair service is delivered to the consumer</semantics>
                        <parameter>
                            <name>RepairData</name>
                            <dataType>ArrayOfRepairStruct</dataType>
                            <semantics>List of the type of repairs done. May be different from the list of requested repairs.</semantics>
                        </parameter>
                    </interactionClass>
                </interactionClass>
                <interactionClass>
                    <name>ServiceReceived</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Used by a service consuming entity to inform the service providing entity that the service has been delivered.</semantics>
                </interactionClass>
                <interactionClass>
                    <name>RejectOffer</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Used to reject an offer made by a service providing entity as indicated in a OfferService interaction. By issuing a RejectOffer interaction the service consuming entity informs the providing entity that the offer has been rejected.</semantics>
                    <parameter>
                        <name>Reason</name>
                        <dataType>HLAASCIIstring</dataType>
                        <semantics>Allows to inform about the reason of the cancel (free text)</semantics>
                    </parameter>
                </interactionClass>
                <interactionClass>
                    <name>CancelOffer</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Used by provider to cancel an already made offer before it has been accepted. Used if the OfferTimeOut has passed.</semantics>
                    <parameter>
                        <name>OfferID</name>
                        <dataType>TransactionId</dataType>
                        <semantics></semantics>
                    </parameter>
                </interactionClass>
                <interactionClass>
                    <name>CancelService</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Used by either a service consuming entity or a service providing entity to inform about early termination of the service delivery or in some cases termination of the service request before delivery has begun.</semantics>
                    <parameter>
                        <name>Reason</name>
                        <dataType>HLAASCIIstring</dataType>
                        <semantics>Allows to inform about the reason of the cancel (free text)</semantics>
                    </parameter>
                </interactionClass>
                <interactionClass>
                    <name>ReadyToReceiveService</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Issued by a service consuming entity to indicate that the start of service delivery can start. The time of service delivery start may be significantly later then indicating ready for service delivery.</semantics>
                </interactionClass>
                <interactionClass>
                    <name>TransportDestroyedEntities</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Used by the service provider federate to give information on managed element to the consumer. This interaction is used only if the provider simulate the destruction of elements managed</semantics>
                    <parameter>
                        <name>DestroyedObjects</name>
                        <dataType>ArrayOfUuid</dataType>
                        <semantics>Allows to follow the elements managed by the provider</semantics>
                    </parameter>
                </interactionClass>
                <interactionClass>
                    <name>TransportDisembarkmentStatus</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Is sent by the service provider federate, to inform the service consumer of the disembarkment state, after the ServiceStarted interaction</semantics>
                    <parameter>
                        <name>DisembarkedObjects</name>
                        <dataType>ArrayOfUuid</dataType>
                        <semantics>Allows to follow the elements managed by the provider</semantics>
                    </parameter>
                    <parameter>
                        <name>TransportUnitIdentifier</name>
                        <dataType>UuidArrayOfHLAbyte16</dataType>
                        <semantics>UUID of transporter</semantics>
                    </parameter>
                </interactionClass>
                <interactionClass>
                    <name>TransportEmbarkmentStatus</name>
                    <sharing>PublishSubscribe</sharing>
                    <transportation>HLAreliable</transportation>
                    <order>Receive</order>
                    <semantics>Is sent by the service provider federate, to inform the service consumer of the embarkment state, after the ServiceStarted interaction</semantics>
                    <parameter>
                        <name>EmbarkedObjects</name>
                        <dataType>ArrayOfUuid</dataType>
                        <semantics>Allows to follow the elements managed by the provider</semantics>
                    </parameter>
                    <parameter>
                        <name>TransportUnitIdentifier</name>
                        <dataType>UuidArrayOfHLAbyte16</dataType>
                        <semantics>UUID of transporter</semantics>
                    </parameter>
                </interactionClass>
            </interactionClass>
        </interactionClass>
    </interactions>
    <dataTypes>
        <simpleDataTypes/>
        <enumeratedDataTypes>
            <enumeratedData>
                <name>OfferTypeEnum32</name>
                <representation>HLAinteger32BE</representation>
                <semantics>Type of the offer (With restriction, positive, negative)</semantics>
                <enumerator>
                    <name>RequestAcknowledgeWithRestriction</name>
                    <value>0</value>
                </enumerator>
                <enumerator>
                    <name>RequestAcknowledgePositive</name>
                    <value>1</value>
                </enumerator>
                <enumerator>
                    <name>RequestAcknowledgeNegative</name>
                    <value>2</value>
                </enumerator>
            </enumeratedData>
            <enumeratedData>
                <name>TransferDirectionEnum32</name>
                <representation>HLAinteger32BE</representation>
                <semantics></semantics>
                <enumerator>
                    <name>FromConsumer</name>
                    <value>0</value>
                </enumerator>
                <enumerator>
                    <name>FromProvider</name>
                    <value>1</value>
                </enumerator>
            </enumeratedData>
        </enumeratedDataTypes>
        <arrayDataTypes>
            <arrayData>
                <name>ArrayOfRepairStruct</name>
                <dataType>RepairStruct</dataType>
                <cardinality>Dynamic</cardinality>
                <encoding>HLAvariableArray</encoding>
                <semantics>List of repair descriptions (equipment and type of repairs).</semantics>
            </arrayData>
            <arrayData>
                <name>ArrayOfRepairTypeEnum</name>
                <dataType>RepairTypeEnum16</dataType>
                <cardinality>Dynamic</cardinality>
                <encoding>HLAvariableArray</encoding>
                <semantics>List of repair types</semantics>
            </arrayData>
        </arrayDataTypes>
        <fixedRecordDataTypes>
            <fixedRecordData>
                <name>RepairStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Repairs associated with a specific materiel</semantics>
                <field>
                    <name>MaterielID</name>
                    <dataType>UuidArrayOfHLAbyte16</dataType>
                    <semantics>UUID for the materiel.</semantics>
                </field>
                <field>
                    <name>Repairs</name>
                    <dataType>ArrayOfRepairTypeEnum</dataType>
                    <semantics>List of the types of repair associated with the materiel.</semantics>
                </field>
            </fixedRecordData>
            <fixedRecordData>
                <name>AppointmentStruct</name>
                <encoding>HLAfixedRecord</encoding>
                <semantics>Date ; Time and Location of an appointment. 
When date and time is set to zero (0), implies no date-time specification</semantics>
                <field>
                    <name>DateTime</name>
                    <dataType>TimeSecInt64</dataType>
                    <semantics>Date time in second since 1 junuary 1970 for the appointment</semantics>
                </field>
                <field>
                    <name>Location</name>
                    <dataType>WorldLocationStruct</dataType>
                    <semantics>Location of the appointment</semantics>
                </field>
            </fixedRecordData>
        </fixedRecordDataTypes>
        <variantRecordDataTypes/>
    </dataTypes>
    <notes>
        <note>
            <label>netn-log_1</label>
            <semantics>All NETN Logistics services are based on a Logistics Service Pattern that include negotiation, delivery and acceptance of logistics services. The pattern is described below and is implemented as base classes in the NETN LOG FOM Module. 
 
The NETN LOG FOM module extends RPR-FOM v2.0 FOM. Datatypes are re-used and extensions to object classes are defined.</semantics>
        </note>
    </notes>
</objectModel>
